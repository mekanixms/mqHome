servoDriver
    - scrie metode pentru deplasare cu viteza variabila
        se foloseste _thread
    >>> for a in range(122,30,-1):
    ...     s.duty(a)
    ...     utime.sleep_ms(10)
    ... 
    >>> for a in range(30,122):
    ...     s.duty(a)
    ...     utime.sleep_ms(10)

scrie drivere pentru
    - Servo - DONE
    - mpp
    - driverele duble mcc

PWM:
    toate perifiericele de folosesc pwm rescrise sa functioneze pe rpi2

servoLib:
    adaptare la rpi2

mqttrFull:
    finalizeaza
        mqtt.topicHandlers[conf.DEVICE_CMDS] = deviceDirectCommandHandler
        mqtt.topicHandlers[conf.STATUS_UPDATE_TOPIC] = deviceStatusCommandHandler

mqttClient2:
    finalizeaza status update si dev cmd dupa modelul peripheral cmds

main:
    - DONE 09-03! fix access point nu cere parola
    - restart config/mqtt - doar in stack
        - la restart scriu in fis tem sta/config ssau sta/mqtt sau ap/config
            si citesc de aici daca exista fisierul (eventual scot opriunea din config)
        - DONE daca e AP (sau nu e config reteaua) restart AP/config

periferice / peripherals
    - extend la initOptions pe stilul arra.extend(optional)
mqtt*
    - prevMessage = message in send - optiune pt duplicate msg / on sau off

jssr:
    DONE(pargs[] si kargs[] adaugat, pe langa dev[])jsu/applyObservablesFromJson - adauga params de functie la context, pe langa dev
        EX: pt mqtta/methods/rawMessage sa pot citi TOPIC (arg 0) si MESSAGE (arg 1)] cum citesc pozotia rotenc mai jos
                Adica {"execute":[{"pid":"2","params":"text=DISPLAY+str(triggerParameters[0])","cmd":"show"}]
                                                                    sau triggerParameters["numeParam"]

            {"triggers":{"rawMessage[0=DISPLAY]":{"execute":[{"pid":"2","params":"text=DISPLAY","cmd":"show"}],"test":"0=DISPLAY"}}}
            {"watchers":{"position[]":{"execute":[{"pid":"2","params":"text=\"Pozitie:\"+str(dev[1].position),col=true","cmd":"show"}],"test":""}}}

    meniu - run standalone or mqtt acepta varianta veche; trebuie sa schimb pe config/sta condif /ap mqtt/sta




mcu:
    - mcu.mqtt= slimmqtt()
    DONE cu addr mac __init hasattr(machine, "unique_id"):
        sa mearga si pe alte platforme nu doar esp

ERORI:



MqttController:
    - fix la select grupuri (sa faca split)
    - implementare feedback pentru comanda (mqttrCuAccessDirectPeripherice)
        - sa vina din mqttr (in functie de driver,  probabil slimmqtt);
        - adaug cmdid la request si daca il am dau publish pe topic feedback
         catre device cu raspuns json la mpu/peripherals/command

mqtt-slimmqtt
    - eroare la intrerupere conexiune server mqtt:
        Mqtt Server Disconnected
            Trying to reconnect to Mosquitto Server
        Unhandled exception in thread started by <bound_method>
        Traceback (most recent call last):
        File "mpy/mqtt.py", line 175, in run
        File "rob.py", line 1, in reconnect
        ExceptionMqttDisconnected: 
        Error while trying to publish

    - connect(lean_session co conf.jsonconfig[clean_session])

    - driver mqtt din slimmqtt;
        atentie la retur in topicDefault msgj in slim msgjs[data] in mqtt
    - mqtt - mesajele din animation sa fie expuse in mqttController, alaturi de butoane on/off driver
    - DONE driver mqtt - pun in interfata buton de start/stop
    - reconectare wifi - schimb din run in connect?
    - in run, la reconnect mqtt, sa separ ca functie separata in care sa verific:
            - DONE wifi connected?
                - DONE reconectez mqtt la serve rpricipal sau alternativ
            - hotspot up? daca nu ma conectez la altul disponibil
                - reconectez mqtt la serve rpricipal sau alternativ
    - DONE: simplific  sub_cb si scot PRESENCE SI altele, fac functie separata
    -DONE subscribe la mai multe topicuri (others)
        automat pt presence,default    

mcuclient:
    - adresa mcu: salvez in dom storage si daca  gasesc incarc o list in fereastra modal, daca nu prompt simplu

jss:
    - DONE parseRequest - POST
model jquery pt test:
                    $.ajax({
                        cache: false,
                        contentType: false,
                        processData: false,
                        method: 'POST',
                        dataType: "json",
                        crossDomain: true,
                        headers: {
                            "Accept": "application/json",
                            // "Content-Type": "multipart/form-data; boundary=||",
                            "Content-Type": "multipart/form-data;",
                            "X-Requested-With": "XmlHttpRequest"
                        },
                        data: $("textarea", container).val(),
                        success: function (data) {
                            console.info("Handler script saved");
                            console.log(data);
                        },
                        url: mcu + "/mqttsetup/" + $("select#topicsList", container).val() + "/set"
                    });





    DONE
    File "jss.py", line 141, in processConnection
    KeyError: Accept


jssr:
    - DRIVER UP DOAR IN ANUMITE MODURI: CONFIG, MQTT, SINGLE
    - DONE: port 8080 in conf sa poata fi schimbat din mcuclient
    - ssl
    - token (generat la configurare) si conectare client browser doar daca da token
    - deep sleep cu wake default pe pin
    - DONE OBSERVABLES SA SAlvez in alt fisier, nu conf.jsonConf
        - ocupa prea multa memorie

fet/relay/relfet:
    - la instantiere sa dau valoare default

peripheral.py
    NU FOLOSESC func.__name__ in id(func) pt compatibilitate esp8266


relfet
    DONE de ce nu se opreste cand mode pwm false din browser??

realbutton:
- DONE tick, adica actiune la fiecare click, nu doar valoare, probabil pbservable de functie
- longpress


emiter si receiver virtual peripherals
    DONE- sa trimit si prmesc mesaje pe mqtt sau jss
    finalizat
    EMITER - MQTT
        - mqtt in _thread separat?? vezi model in tests

automation
- periferice ANALOG / DIGITAL IN
- Accel - optiune de set 0 pozitia curenta
- peripheral state at boot

- DONE redenumire in Animation
- DONE: din js encode la " spatiu si alte caractere speciale cand setez in automation
    -DONE : nu merge ca fac split: schimb la split 1 singura data
spre ex nu merge WHEN(value[1]):  dev[4]/resetCursor() dev[4]/show(text="VALOARE: "+str(dev[1].position))

- DONE run on start: dev[x]/some,...
    - WHEN(position[20]):  dev[0]/start(mode=0,period=[1-({dev[x]/prop}/3)])
- DONE finalizare stimer
- SDONE observable properties si methods
    - DONE implementare on / before-after methods
- DONE observables si peripherals:
    - salvare in domStorage cu posibilitate de incarcare si update
- DONE aplica duty, freq, on off value doar daca nu este deja aceeasi valoare